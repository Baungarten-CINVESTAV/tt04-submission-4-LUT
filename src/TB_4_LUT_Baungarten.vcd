$date
	Mon Aug 28 20:26:31 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TB_4_LUT_Baungarten $end
$var wire 8 ! uo_out [7:0] $end
$var wire 8 " uio_out [7:0] $end
$var wire 8 # uio_oe [7:0] $end
$var reg 1 $ clk $end
$var reg 1 % ena $end
$var reg 1 & rst_n $end
$var reg 8 ' ui_in [7:0] $end
$var reg 8 ( uio_in [7:0] $end
$scope module DUT $end
$var wire 1 $ clk $end
$var wire 1 % ena $end
$var wire 1 & rst_n $end
$var wire 8 ) ui_in [7:0] $end
$var wire 8 * uio_in [7:0] $end
$var wire 8 + uo_out [7:0] $end
$var wire 8 , uio_out [7:0] $end
$var wire 8 - uio_oe [7:0] $end
$var wire 1 . o_Data_L8 $end
$var wire 1 / o_Data_L7 $end
$var wire 1 0 o_Data_L6 $end
$var wire 1 1 o_Data_L5 $end
$var wire 1 2 o_Data_L4 $end
$var wire 1 3 o_Data_L3 $end
$var wire 1 4 o_Data_L2 $end
$var wire 1 5 o_Data_L1 $end
$var wire 1 6 i_config_enable_L $end
$var wire 4 7 i_LUT_L8 [3:0] $end
$var wire 4 8 i_LUT_L7 [3:0] $end
$var wire 4 9 i_LUT_L6 [3:0] $end
$var wire 4 : i_LUT_L5 [3:0] $end
$var wire 4 ; i_LUT_L4 [3:0] $end
$var wire 4 < i_LUT_L3 [3:0] $end
$var wire 4 = i_LUT_L2 [3:0] $end
$var wire 4 > i_LUT_L1 [3:0] $end
$var wire 1 ? i_Data_Mux2 $end
$var wire 1 @ i_Data_Mux1 $end
$var wire 2 A Lut_mux [1:0] $end
$var wire 1 B Data_mux $end
$var reg 1 C i_Data_L1 $end
$var reg 1 D i_Data_L2 $end
$var reg 1 E i_Data_L3 $end
$var reg 1 F i_Data_L4 $end
$var reg 1 G i_Data_L5 $end
$var reg 1 H i_Data_L6 $end
$var reg 1 I i_Data_L7 $end
$var reg 1 J i_Data_L8 $end
$var reg 4 K i_addr_load_data_L1 [3:0] $end
$var reg 4 L i_addr_load_data_L2 [3:0] $end
$var reg 4 M i_addr_load_data_L3 [3:0] $end
$var reg 4 N i_addr_load_data_L4 [3:0] $end
$var reg 4 O i_addr_load_data_L5 [3:0] $end
$var reg 4 P i_addr_load_data_L6 [3:0] $end
$var reg 4 Q i_addr_load_data_L7 [3:0] $end
$var reg 4 R i_addr_load_data_L8 [3:0] $end
$scope module LUT_1 $end
$var wire 1 C i_Data $end
$var wire 4 S i_LUT [3:0] $end
$var wire 4 T i_addr_load_data [3:0] $end
$var wire 1 6 i_config_enable $end
$var reg 1 5 o_Data $end
$var reg 16 U r_data [15:0] $end
$upscope $end
$scope module LUT_2 $end
$var wire 1 D i_Data $end
$var wire 4 V i_LUT [3:0] $end
$var wire 4 W i_addr_load_data [3:0] $end
$var wire 1 6 i_config_enable $end
$var reg 1 4 o_Data $end
$var reg 16 X r_data [15:0] $end
$upscope $end
$scope module LUT_3 $end
$var wire 1 E i_Data $end
$var wire 4 Y i_LUT [3:0] $end
$var wire 4 Z i_addr_load_data [3:0] $end
$var wire 1 6 i_config_enable $end
$var reg 1 3 o_Data $end
$var reg 16 [ r_data [15:0] $end
$upscope $end
$scope module LUT_4 $end
$var wire 1 F i_Data $end
$var wire 4 \ i_LUT [3:0] $end
$var wire 4 ] i_addr_load_data [3:0] $end
$var wire 1 6 i_config_enable $end
$var reg 1 2 o_Data $end
$var reg 16 ^ r_data [15:0] $end
$upscope $end
$scope module LUT_5 $end
$var wire 1 G i_Data $end
$var wire 4 _ i_LUT [3:0] $end
$var wire 4 ` i_addr_load_data [3:0] $end
$var wire 1 6 i_config_enable $end
$var reg 1 1 o_Data $end
$var reg 16 a r_data [15:0] $end
$upscope $end
$scope module LUT_6 $end
$var wire 1 H i_Data $end
$var wire 4 b i_LUT [3:0] $end
$var wire 4 c i_addr_load_data [3:0] $end
$var wire 1 6 i_config_enable $end
$var reg 1 0 o_Data $end
$var reg 16 d r_data [15:0] $end
$upscope $end
$scope module LUT_7 $end
$var wire 1 I i_Data $end
$var wire 4 e i_LUT [3:0] $end
$var wire 4 f i_addr_load_data [3:0] $end
$var wire 1 6 i_config_enable $end
$var reg 1 / o_Data $end
$var reg 16 g r_data [15:0] $end
$upscope $end
$scope module LUT_8 $end
$var wire 1 J i_Data $end
$var wire 4 h i_LUT [3:0] $end
$var wire 4 i i_addr_load_data [3:0] $end
$var wire 1 6 i_config_enable $end
$var reg 1 . o_Data $end
$var reg 16 j r_data [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx j
bx i
b0 h
bx g
bx f
b0 e
bx d
bx c
b0 b
bx a
bx `
b0 _
bx ^
bx ]
b0 \
bx [
bx Z
b0 Y
bx X
bx W
b0 V
bx0 U
b0 T
b0 S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
b0 K
xJ
xI
xH
xG
xF
xE
xD
0C
0B
b0 A
0@
0?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
16
x5
x4
x3
x2
x1
x0
x/
x.
b0 -
b11111111 ,
bx +
bx000001 *
b0 )
bx000001 (
b0 '
0&
1%
0$
b0 #
b11111111 "
bx !
$end
#50
bx1 U
1C
1@
bx000011 (
bx000011 *
#100
bx01 U
0C
b1 K
b1 T
0@
b1 '
b1 )
bx000001 (
bx000001 *
#150
bx101 U
1C
b10 K
b10 T
1@
b10 '
b10 )
bx000011 (
bx000011 *
#200
bx1101 U
b11 K
b11 T
b11 '
b11 )
#250
bx01101 U
0C
b100 K
b100 T
0@
b100 '
b100 )
bx000001 (
bx000001 *
#300
bx101101 U
1C
b101 K
b101 T
1@
b101 '
b101 )
bx000011 (
bx000011 *
#350
bx0101101 U
0C
b110 K
b110 T
0@
b110 '
b110 )
bx000001 (
bx000001 *
#400
bx10101101 U
1C
b111 K
b111 T
1@
b111 '
b111 )
bx000011 (
bx000011 *
#450
bx110101101 U
b1000 K
b1000 T
b1000 '
b1000 )
#500
bx1110101101 U
b1001 K
b1001 T
b1001 '
b1001 )
#550
bx01110101101 U
0C
b1010 K
b1010 T
0@
b1010 '
b1010 )
bx000001 (
bx000001 *
#600
bx001110101101 U
b1011 K
b1011 T
b1011 '
b1011 )
#650
bx0001110101101 U
b1100 K
b1100 T
b1100 '
b1100 )
#700
bx10001110101101 U
1C
b1101 K
b1101 T
1@
b1101 '
b1101 )
bx000011 (
bx000011 *
#750
bx010001110101101 U
0C
b1110 K
b1110 T
0@
b1110 '
b1110 )
bx000001 (
bx000001 *
#800
bx1 X
1D
b0 L
b0 W
bx010001110101100 U
1?
1B
b0 K
b0 T
bx100101 (
bx100101 *
b0 '
b0 )
#850
bx11 X
b1 L
b1 W
b1 '
b1 )
#900
bx111 X
b10 L
b10 W
b10 '
b10 )
#950
bx1111 X
b11 L
b11 W
b11 '
b11 )
#1000
bx11111 X
b100 L
b100 W
b100 '
b100 )
#1050
bx011111 X
0D
b101 L
b101 W
0?
b101 '
b101 )
bx100001 (
bx100001 *
#1100
bx0011111 X
b110 L
b110 W
b110 '
b110 )
#1150
bx10011111 X
1D
b111 L
b111 W
1?
b111 '
b111 )
bx100101 (
bx100101 *
#1200
bx110011111 X
b1000 L
b1000 W
b1000 '
b1000 )
#1250
bx1110011111 X
b1001 L
b1001 W
b1001 '
b1001 )
#1300
bx01110011111 X
0D
b1010 L
b1010 W
0?
b1010 '
b1010 )
bx100001 (
bx100001 *
#1350
bx001110011111 X
b1011 L
b1011 W
b1011 '
b1011 )
#1400
bx1001110011111 X
1D
b1100 L
b1100 W
1?
b1100 '
b1100 )
bx100101 (
bx100101 *
#1450
bx01001110011111 X
0D
b1101 L
b1101 W
0?
b1101 '
b1101 )
bx100001 (
bx100001 *
#1500
bx001001110011111 X
b1110 L
b1110 W
b1110 '
b1110 )
#1550
bx1 [
1E
b0 M
b0 Z
bx001001110011110 X
1@
b1 A
0B
b0 L
b0 W
bx001011 (
bx001011 *
b0 '
b0 )
#1600
bx11 [
b1 M
b1 Z
b1 '
b1 )
#1650
bx011 [
0E
b10 M
b10 Z
0@
b10 '
b10 )
bx001001 (
bx001001 *
#1700
bx1011 [
1E
b11 M
b11 Z
1@
b11 '
b11 )
bx001011 (
bx001011 *
#1750
bx11011 [
b100 M
b100 Z
b100 '
b100 )
#1800
bx111011 [
b101 M
b101 Z
b101 '
b101 )
#1850
bx1111011 [
b110 M
b110 Z
b110 '
b110 )
#1900
bx11111011 [
b111 M
b111 Z
b111 '
b111 )
#1950
bx111111011 [
b1000 M
b1000 Z
b1000 '
b1000 )
#2000
bx1111111011 [
b1001 M
b1001 Z
b1001 '
b1001 )
#2050
bx01111111011 [
0E
b1010 M
b1010 Z
0@
b1010 '
b1010 )
bx001001 (
bx001001 *
#2100
bx101111111011 [
1E
b1011 M
b1011 Z
1@
b1011 '
b1011 )
bx001011 (
bx001011 *
#2150
bx0101111111011 [
0E
b1100 M
b1100 Z
0@
b1100 '
b1100 )
bx001001 (
bx001001 *
#2200
bx00101111111011 [
b1101 M
b1101 Z
b1101 '
b1101 )
#2250
bx000101111111011 [
b1110 M
b1110 Z
b1110 '
b1110 )
#2300
bx1 ^
1F
b0 N
b0 ]
bx000101111111010 [
1?
1B
b0 M
b0 Z
bx101101 (
bx101101 *
b0 '
b0 )
#2350
bx01 ^
0F
b1 N
b1 ]
0?
b1 '
b1 )
bx101001 (
bx101001 *
#2400
bx101 ^
1F
b10 N
b10 ]
1?
b10 '
b10 )
bx101101 (
bx101101 *
#2450
bx1101 ^
b11 N
b11 ]
b11 '
b11 )
#2500
bx01101 ^
0F
b100 N
b100 ]
0?
b100 '
b100 )
bx101001 (
bx101001 *
#2550
bx101101 ^
1F
b101 N
b101 ]
1?
b101 '
b101 )
bx101101 (
bx101101 *
#2600
bx1101101 ^
b110 N
b110 ]
b110 '
b110 )
#2650
bx01101101 ^
0F
b111 N
b111 ]
0?
b111 '
b111 )
bx101001 (
bx101001 *
#2700
bx101101101 ^
1F
b1000 N
b1000 ]
1?
b1000 '
b1000 )
bx101101 (
bx101101 *
#2750
bx0101101101 ^
0F
b1001 N
b1001 ]
0?
b1001 '
b1001 )
bx101001 (
bx101001 *
#2800
bx10101101101 ^
1F
b1010 N
b1010 ]
1?
b1010 '
b1010 )
bx101101 (
bx101101 *
#2850
bx110101101101 ^
b1011 N
b1011 ]
b1011 '
b1011 )
#2900
bx0110101101101 ^
0F
b1100 N
b1100 ]
0?
b1100 '
b1100 )
bx101001 (
bx101001 *
#2950
bx10110101101101 ^
1F
b1101 N
b1101 ]
1?
b1101 '
b1101 )
bx101101 (
bx101101 *
#3000
bx110110101101101 ^
b1110 N
b1110 ]
b1110 '
b1110 )
#3050
bx1 a
1G
b0 O
b0 `
bx110110101101100 ^
1@
b10 A
0B
0F
b0 N
b0 ]
0?
b0 '
b0 )
bx010011 (
bx010011 *
#3100
bx01 a
0G
b1 O
b1 `
0@
b1 '
b1 )
bx010001 (
bx010001 *
#3150
bx101 a
1G
b10 O
b10 `
1@
b10 '
b10 )
bx010011 (
bx010011 *
#3200
bx0101 a
0G
b11 O
b11 `
0@
b11 '
b11 )
bx010001 (
bx010001 *
#3250
bx00101 a
b100 O
b100 `
b100 '
b100 )
#3300
bx000101 a
b101 O
b101 `
b101 '
b101 )
#3350
bx1000101 a
1G
b110 O
b110 `
1@
b110 '
b110 )
bx010011 (
bx010011 *
#3400
bx01000101 a
0G
b111 O
b111 `
0@
b111 '
b111 )
bx010001 (
bx010001 *
#3450
bx101000101 a
1G
b1000 O
b1000 `
1@
b1000 '
b1000 )
bx010011 (
bx010011 *
#3500
bx0101000101 a
0G
b1001 O
b1001 `
0@
b1001 '
b1001 )
bx010001 (
bx010001 *
#3550
bx10101000101 a
1G
b1010 O
b1010 `
1@
b1010 '
b1010 )
bx010011 (
bx010011 *
#3600
bx010101000101 a
0G
b1011 O
b1011 `
0@
b1011 '
b1011 )
bx010001 (
bx010001 *
#3650
bx0010101000101 a
b1100 O
b1100 `
b1100 '
b1100 )
#3700
bx00010101000101 a
b1101 O
b1101 `
b1101 '
b1101 )
#3750
bx100010101000101 a
1G
b1110 O
b1110 `
1@
b1110 '
b1110 )
bx010011 (
bx010011 *
#3800
bx1 d
1H
b0 P
b0 c
bx100010101000100 a
1?
1B
0G
b0 O
b0 `
0@
b0 '
b0 )
bx110101 (
bx110101 *
#3850
bx01 d
0H
b1 P
b1 c
0?
b1 '
b1 )
bx110001 (
bx110001 *
#3900
bx001 d
b10 P
b10 c
b10 '
b10 )
#3950
bx0001 d
b11 P
b11 c
b11 '
b11 )
#4000
bx10001 d
1H
b100 P
b100 c
1?
b100 '
b100 )
bx110101 (
bx110101 *
#4050
bx110001 d
b101 P
b101 c
b101 '
b101 )
#4100
bx1110001 d
b110 P
b110 c
b110 '
b110 )
#4150
bx01110001 d
0H
b111 P
b111 c
0?
b111 '
b111 )
bx110001 (
bx110001 *
#4200
bx101110001 d
1H
b1000 P
b1000 c
1?
b1000 '
b1000 )
bx110101 (
bx110101 *
#4250
bx1101110001 d
b1001 P
b1001 c
b1001 '
b1001 )
#4300
bx01101110001 d
0H
b1010 P
b1010 c
0?
b1010 '
b1010 )
bx110001 (
bx110001 *
#4350
bx001101110001 d
b1011 P
b1011 c
b1011 '
b1011 )
#4400
bx1001101110001 d
1H
b1100 P
b1100 c
1?
b1100 '
b1100 )
bx110101 (
bx110101 *
#4450
bx11001101110001 d
b1101 P
b1101 c
b1101 '
b1101 )
#4500
bx111001101110001 d
b1110 P
b1110 c
b1110 '
b1110 )
#4550
bx0 g
0I
b0 Q
b0 f
bx111001101110000 d
b11 A
0B
0H
b0 P
b0 c
0?
b0 '
b0 )
bx011001 (
bx011001 *
#4600
bx00 g
b1 Q
b1 f
b1 '
b1 )
#4650
bx100 g
1I
b10 Q
b10 f
1@
b10 '
b10 )
bx011011 (
bx011011 *
#4700
bx1100 g
b11 Q
b11 f
b11 '
b11 )
#4750
bx11100 g
b100 Q
b100 f
b100 '
b100 )
#4800
bx111100 g
b101 Q
b101 f
b101 '
b101 )
#4850
bx1111100 g
b110 Q
b110 f
b110 '
b110 )
#4900
bx01111100 g
0I
b111 Q
b111 f
0@
b111 '
b111 )
bx011001 (
bx011001 *
#4950
bx101111100 g
1I
b1000 Q
b1000 f
1@
b1000 '
b1000 )
bx011011 (
bx011011 *
#5000
bx1101111100 g
b1001 Q
b1001 f
b1001 '
b1001 )
#5050
bx11101111100 g
b1010 Q
b1010 f
b1010 '
b1010 )
#5100
bx111101111100 g
b1011 Q
b1011 f
b1011 '
b1011 )
#5150
bx1111101111100 g
b1100 Q
b1100 f
b1100 '
b1100 )
#5200
bx11111101111100 g
b1101 Q
b1101 f
b1101 '
b1101 )
#5250
bx111111101111100 g
b1110 Q
b1110 f
b1110 '
b1110 )
#5300
b111111101111100 g
0I
b1111 Q
b1111 f
0@
b1111 '
b1111 )
bx011001 (
bx011001 *
#5500
05
14
13
02
01
00
bx0000110 !
bx0000110 +
0/
b1 >
b1 S
b1 =
b1 V
b1 <
b1 Y
b1 ;
b1 \
b1 :
b1 _
b1 9
b1 b
b1 8
b1 e
b1 7
b1 h
06
b11111 '
b11111 )
bx011000 (
bx011000 *
#5550
15
03
12
11
bx1011011 !
bx1011011 +
1/
b10 >
b10 S
b10 =
b10 V
b10 <
b10 Y
b10 ;
b10 \
b10 :
b10 _
b10 9
b10 b
b10 8
b10 e
b10 7
b10 h
b101111 '
b101111 )
#5600
13
bx1001111 !
bx1001111 +
01
b11 >
b11 S
b11 =
b11 V
b11 <
b11 Y
b11 ;
b11 \
b11 :
b11 _
b11 9
b11 b
b11 8
b11 e
b11 7
b11 h
b111111 '
b111111 )
#5650
05
02
bx1100110 !
bx1100110 +
10
b100 >
b100 S
b100 =
b100 V
b100 <
b100 Y
b100 ;
b100 \
b100 :
b100 _
b100 9
b100 b
b100 8
b100 e
b100 7
b100 h
b1001111 '
b1001111 )
#5700
15
04
bx1101101 !
bx1101101 +
12
b101 >
b101 S
b101 =
b101 V
b101 <
b101 Y
b101 ;
b101 \
b101 :
b101 _
b101 9
b101 b
b101 8
b101 e
b101 7
b101 h
b1011111 '
b1011111 )
#5750
05
bx1111100 !
bx1111100 +
11
b110 >
b110 S
b110 =
b110 V
b110 <
b110 Y
b110 ;
b110 \
b110 :
b110 _
b110 9
b110 b
b110 8
b110 e
b110 7
b110 h
b1101111 '
b1101111 )
#5800
15
14
02
01
00
bx0000111 !
bx0000111 +
0/
b111 >
b111 S
b111 =
b111 V
b111 <
b111 Y
b111 ;
b111 \
b111 :
b111 _
b111 9
b111 b
b111 8
b111 e
b111 7
b111 h
b1111111 '
b1111111 )
#5850
12
11
10
bx1111111 !
bx1111111 +
1/
b1000 >
b1000 S
b1000 =
b1000 V
b1000 <
b1000 Y
b1000 ;
b1000 \
b1000 :
b1000 _
b1000 9
b1000 b
b1000 8
b1000 e
b1000 7
b1000 h
b10001111 '
b10001111 )
#5900
02
bx1100111 !
bx1100111 +
01
b1001 >
b1001 S
b1001 =
b1001 V
b1001 <
b1001 Y
b1001 ;
b1001 \
b1001 :
b1001 _
b1001 9
b1001 b
b1001 8
b1001 e
b1001 7
b1001 h
b10011111 '
b10011111 )
#5950
05
04
03
12
11
bx1011000 !
bx1011000 +
00
b1010 >
b1010 S
b1010 =
b1010 V
b1010 <
b1010 Y
b1010 ;
b1010 \
b1010 :
b1010 _
b1010 9
b1010 b
b1010 8
b1010 e
b1010 7
b1010 h
b10101111 '
b10101111 )
#6000
13
bx1001100 !
bx1001100 +
01
b1011 >
b1011 S
b1011 =
b1011 V
b1011 <
b1011 Y
b1011 ;
b1011 \
b1011 :
b1011 _
b1011 9
b1011 b
b1011 8
b1011 e
b1011 7
b1011 h
b10111111 '
b10111111 )
#6050
14
03
02
bx1100010 !
bx1100010 +
10
b1100 >
b1100 S
b1100 =
b1100 V
b1100 <
b1100 Y
b1100 ;
b1100 \
b1100 :
b1100 _
b1100 9
b1100 b
b1100 8
b1100 e
b1100 7
b1100 h
b11001111 '
b11001111 )
#6100
15
04
bx1101001 !
bx1101001 +
12
b1101 >
b1101 S
b1101 =
b1101 V
b1101 <
b1101 Y
b1101 ;
b1101 \
b1101 :
b1101 _
b1101 9
b1101 b
b1101 8
b1101 e
b1101 7
b1101 h
b11011111 '
b11011111 )
#6150
05
bx1111000 !
bx1111000 +
11
b1110 >
b1110 S
b1110 =
b1110 V
b1110 <
b1110 Y
b1110 ;
b1110 \
b1110 :
b1110 _
b1110 9
b1110 b
b1110 8
b1110 e
b1110 7
b1110 h
b11101111 '
b11101111 )
#6200
x5
x4
x3
x2
x1
x0
bx0xxxxxx !
bx0xxxxxx +
0/
b1111 >
b1111 S
b1111 =
b1111 V
b1111 <
b1111 Y
b1111 ;
b1111 \
b1111 :
b1111 _
b1111 9
b1111 b
b1111 8
b1111 e
b1111 7
b1111 h
b11111111 '
b11111111 )
#6250
05
04
03
02
01
bx0000000 !
bx0000000 +
00
b0 >
b0 S
b0 =
b0 V
b0 <
b0 Y
b0 ;
b0 \
b0 :
b0 _
b0 9
b0 b
b0 8
b0 e
b0 7
b0 h
b1111 '
b1111 )
#6300
14
bx0000110 !
bx0000110 +
13
b1 >
b1 S
b1 =
b1 V
b1 <
b1 Y
b1 ;
b1 \
b1 :
b1 _
b1 9
b1 b
b1 8
b1 e
b1 7
b1 h
b11111 '
b11111 )
#6350
15
03
12
11
bx1011011 !
bx1011011 +
1/
b10 >
b10 S
b10 =
b10 V
b10 <
b10 Y
b10 ;
b10 \
b10 :
b10 _
b10 9
b10 b
b10 8
b10 e
b10 7
b10 h
b101111 '
b101111 )
#6400
13
bx1001111 !
bx1001111 +
01
b11 >
b11 S
b11 =
b11 V
b11 <
b11 Y
b11 ;
b11 \
b11 :
b11 _
b11 9
b11 b
b11 8
b11 e
b11 7
b11 h
b111111 '
b111111 )
#6450
05
02
bx1100110 !
bx1100110 +
10
b100 >
b100 S
b100 =
b100 V
b100 <
b100 Y
b100 ;
b100 \
b100 :
b100 _
b100 9
b100 b
b100 8
b100 e
b100 7
b100 h
b1001111 '
b1001111 )
#6500
15
04
bx1101101 !
bx1101101 +
12
b101 >
b101 S
b101 =
b101 V
b101 <
b101 Y
b101 ;
b101 \
b101 :
b101 _
b101 9
b101 b
b101 8
b101 e
b101 7
b101 h
b1011111 '
b1011111 )
#6550
05
bx1111100 !
bx1111100 +
11
b110 >
b110 S
b110 =
b110 V
b110 <
b110 Y
b110 ;
b110 \
b110 :
b110 _
b110 9
b110 b
b110 8
b110 e
b110 7
b110 h
b1101111 '
b1101111 )
#6600
15
14
02
01
00
bx0000111 !
bx0000111 +
0/
b111 >
b111 S
b111 =
b111 V
b111 <
b111 Y
b111 ;
b111 \
b111 :
b111 _
b111 9
b111 b
b111 8
b111 e
b111 7
b111 h
b1111111 '
b1111111 )
#6650
12
11
10
bx1111111 !
bx1111111 +
1/
b1000 >
b1000 S
b1000 =
b1000 V
b1000 <
b1000 Y
b1000 ;
b1000 \
b1000 :
b1000 _
b1000 9
b1000 b
b1000 8
b1000 e
b1000 7
b1000 h
b10001111 '
b10001111 )
#6700
